---
const types = ["All", "New", "Events", "Conditions", "Sections", "Effects", "Types", "Structures", "Functions"]
const versions = ["All", "2.10.0", "2.9.0", "2.8.0", "2.7.0"]
---

<script>
    interface Filter {
        type: string;
        version: string;
    }

    let filter: Filter = {type: "All", version: "All"}

    function handleFilterClick(button: HTMLButtonElement) {
        if (button.getAttribute("data-type") === "type") {
            filter.type = button.textContent!!;
        } else {
            filter.version = button.textContent!!;
        }

        // update rest of buttons
        const buttons = document.querySelectorAll("#filters button");
        buttons.forEach(button => {
            let match = false;
            if (button.getAttribute("data-type") === "type") {
                match = filter.type == button.textContent!!;
            } else {
                match = filter.version == button.textContent!!;
            }

            if (match) {
                button.classList.add("bg-skript", "font-bold");
                button.classList.remove("bg-l-bg-secondary", "dark:bg-d-bg-secondary");
            } else {
                button.classList.add("bg-l-bg-secondary", "dark:bg-d-bg-secondary");
                button.classList.remove("bg-skript", "font-bold");
            }
        });
    }

    function resetButtons() {
        const buttons = document.querySelectorAll("#filters .filter-button");
        (buttons[0] as HTMLButtonElement).click();
        (buttons[[...buttons].filter(b => b.getAttribute("data-type") === "type").length] as HTMLButtonElement).click();
    }

    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll("#filters .filter-button");
        buttons.forEach(button => {
            button.addEventListener("click", () => handleFilterClick(button as HTMLButtonElement));
        });
        resetButtons();
    });

    document.getElementById("filter-clearer")?.addEventListener("click", resetButtons);
</script>

<div id="filters" class="w-64 h-full flex flex-col p-4 gap-2 
    border-l-2 border-l-border dark:border-d-border">
    <div class="flex flex-row gap-2">
        <h2>Filter by</h2>
        <div class="flex-auto"></div>
        <button id="filter-clearer" class="px-2 w-fit rounded-sm 
            hover:cursor-pointer hover:opacity-80 transition">
            Clear
        </button>
    </div>
    <h3>Type</h3>
    
    {types.map(x => 
        <button data-type="type" class="filter-button p-2 rounded-md 
            bg-l-bg-secondary dark:bg-d-bg-secondary 
            hover:cursor-pointer hover:opacity-80 transition">
            {x}
        </button>
    )}


    <h3>Version</h3>
    {versions.map(x => 
        <button data-type="version" class="filter-button p-2 rounded-md text-center 
            bg-l-bg-secondary dark:bg-d-bg-secondary 
            hover:cursor-pointer hover:opacity-80 transition">
            {x}
        </button>
    )}
</div>